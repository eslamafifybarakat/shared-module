--What are Angular modules?
	In Angular applications, modules are small pieces of code with independent program functionalities.

 For a simple example of how Angular modules work, let’s say you’re building an ecommerce website or application. You might have a module for your cart section, another for your products section, another for customers, and so on. Each module represents an independent piece of your ecommerce application.

--Why use modules in Angular?
	If you don’t pay rapt attention to proper software architecture, parts of your app can become deeply entangled and disorganized, making it more difficult to reuse code or test any piece of code in isolation.

--Modules enable you to:

	-Develop a particular piece of functionality independently from the others
	-Manage teams more easily by enabling each development team to work on a separate feature
	-Explicitly define the list of modules that the current one requires to function
	-Deploy features gradually
	-Build scalable applications
	-Write tests easily


--Types of modules in Angular
	The types of modules available in Angular include root, core, shared, and feature modules. Let’s go over each Angular module type in more detail.

	#Root module
	The root module is the main module in an Angular application. It is generated by the Angular CLI as AppModule and bootstrapped when the application starts.

	Every other Angular module depends either directly or indirectly on the root module. Only one root module can exist in an Angular application.

	#Core module
	The core module usually contains components that are used once in an Angular application, such as a navigation bar, loader, footer, etc. This module should be loaded globally in AppModule.

	#Shared module
	A shared module is made up of directives, pipes, and components that can be reused in feature modules.

	For example, let’s say you’ve written a custom grid or filter that is reused in multiple modules of your Angular application. You could identify these as shared modules.

	#Feature modules
	Feature modules house the main features of your Angular application.


If you’re building an ecommerce application, for example, you might have specific sets of functionalities, such as orders, products, cart, customers, etc. Breaking these functionalities into feature modules helps you split the application into dedicated areas. This enables multiple developers or teams of developers to work on independent features without breaking other parts of the application.

